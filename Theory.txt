1. Сериализация — это процесс сохранения состояния объекта в последовательность байт. 
Десериализация — это процесс восстановления объекта из этих байт.
В Java для сериализации используется интерфейс Serializable. Для него не нужно реализовывать ни одного метода.
2. Чтобы создать поток, можно использовать класс Thread или интерфейс Runnable.
Если использовать класс Thread, то нужно создать его наследника и переопределить метод. Потом создать экземпляр своего класса и вызвать метод start()
Если использовать интерфейс Runnable, то просто его нужно реализовать и его метод run(). Создать экземпл яр Thread, и в конструктор передать экземпляр класса, который этот интерфейс реализует.
3. Есть два типа потоков: демоны и обычные. Демон-потоки это фоновые потоки, которые работают на фоне. И они  могут быть завершены на любой выполняемой команде, т.е чтобы завершился процесс, нужно, чтобы завершили работу все обычные потоки, а на демон потоки все равно. Поэтому их целостность может быть повреждена.
4. Java IO является потокориентированным, а Java NIO - буфер-ориентированным. Это значит, что потоориентированный вывод используется чтение из потока в поток один или несколько байтов поочередно. Инфа нигде не кэшируется. Поэтому мы не можем двигаться по потоку вперед или назад, тут нужно кэшировать в буфере для этого.
В java NIO сначала все в буфер считывается, там уже можно двигаться вперед назад, это является плюсом при обработке данных
В java IO потоки вывода и ввода блокирующие. Значит, что в потоке, где все выполняется, если буду т вызваны методы другога класса, то приизойдет блокировка, пока данные не будут записаны или считаны. Поток выполнения не может делать ничего другого в данный момент
В java NIO поток выполнения может пока что заняться чем-то другим, т.е не блокируется